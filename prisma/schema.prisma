// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  password      String?
  image         String?   @db.Text
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  projects      Project[]
  settings      Settings?
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Project {
  id             String   @id @default(cuid())
  name           String
  description    String?  @db.Text
  clientEmail    String
  startDate      DateTime
  endDate        DateTime
  scope          String   // Web, Mobile, Desktop
  hourlyRate     Float
  hoursPerDay    Float
  workingDays    String[] // Array of working days
  totalPrice     Float
  discountedPrice Float?
  paymentMethod  String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  userId         String
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Settings {
  id                String  @id @default(cuid())
  userId            String  @unique
  defaultHourlyRate Float   @default(50)
  defaultHoursPerDay Float  @default(6)
  defaultWorkingDays String[] @default(["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"])
  pixDiscountPercentage Float @default(20)
  otherDiscounts    Json?   // For future discount types
  currency          String  @default("USD")
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}